
@{
    ViewBag.Title = "Index";
}

<h2>Bible Study</h2>
@if (ViewBag.ErrorMessage != null && ViewBag.ErrorMessage != string.Empty)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}
<h3>Juan 5:39 Reina-Valera 1960 (RVR1960)</h3>
<p>39 Escudriñad las Escrituras; porque a vosotros os parece que en ellas tenéis la vida eterna; y ellas son las que dan testimonio de mí;</p>


    <div class="search-bar">
        <div class="btn-group" role="group" aria-label="...">
            <div class="input-group col-md-12">
                <button id="ver" type="button" class="btn btn-lg btn-danger">Version</button>
                <button id="book" type="button" style="display:none;margin-left:15px;" class="btn btn-lg btn-danger">Book</button>
            </div>
        </div>
    </div>
    <div class="row">
        <script id="bw-widget-src" src="//es.bibles.org/widget/client"></script>
        <script>
            BIBLESEARCH.widget({
                "background": "616D74",
                "color": "2B1616",
                "placeholder": "Buscar pasajes de la Biblia y palabras clave",
                "selected": "spa-RVR1960",
                "versions": "eng-ESV,spa-BHTI,spa-BLP,spa-BLPH,spa-BTI,spa-DHH,spa-DHHE,spa-RVC,spa-RVR1960,spa-RVR95,spa-TLA"
            });
        </script>
    </div>
    <div class="section-content" style="display:none">
        <h3>Please pick your prefered language</h3>
        <ul id="fieldlist"></ul>
    </div>
    @section Scripts{
        @Styles.Render("~/bundles/kendo-css")
        @Scripts.Render("~/bundles/kendo")
        @Scripts.Render("~/bundles/searchable")

    <script type="text/javascript">
        var languages = [];
        var cookieName = "bibleParams";
        $('.search-bar').busyIndicator(true);

        $('.fancybox-overlay .fancybox-overlay-fixed').on('DOMNodeInserted', function (e) {
            var target = e.target; //inserted element;
            alert('hey')
        });

        $(document).ready(function () {
            var myParams = readCookie(cookieName);

            if (myParams === null || myParams === undefined || myParams === '') {
                $.when(fillLanguages()).done(function () {
                    for (var i = 0; i < languages.length; i++) {
                        var lang = languages[i];
                        var li = $('<li><a href="/Bible/Volume?lang=' + lang.language_family_code + '">' + lang.language_family_name + '</a></li>');
                        li.appendTo($('#fieldlist'));
                    }
                });

                $('.section-content').show();
                init();
            }
            else {
                //build buttons

            }
        });
        //functions
        function rememberMySelection(mySelection) {
            var grid = $("#table").data("kendoGrid");
            var selectedLanguage = grid.dataItem(grid.select());

            grid = $("#table-version").data("kendoGrid");
            var selectedVersion = grid.dataItem(grid.select());

            grid = $("#table-book").data("kendoGrid");
            var selectedBook = grid.dataItem(grid.select());
            var data = { "lang": selectedLanguage, "version": selectedVersion, "book": selectedBook, "selection": mySelection };

            eraseCookie(cookieName);
            createCookie(cookieName, JSON.stringify(data), 5);

            //re-direct index
            var url = '@Html.Raw(@Url.Action("Index", new { @version = "dam_id", @book = "book_id", @chapterid = "chapter_id" }))';
            var href = url.replace("dam_id", selectedVersion.dam_id).replace("book_id", selectedBook.book_id).replace("chapter_id", mySelection.chapter_id);
            window.location.href = href;
    }

    function init() {
        //container
        var container = $("<div>");
        var details = $([
            '<div class="row">',
            '<div class="col-lg-12">',
            '<input type="search" style="width:100%" id="search" value="" class="form-control" placeholder="Search your prefered language">',
            '</div>',
            '</div>',
            '<div class="row">',
            '<div class="col-lg-12">',
            '<div class="table" id="table">',

            '</div>',
            '<hr>',
            '</div>',
            '</div>'].join(""));

        container.append(details);

        var options = {
            container: 'body',
            title: 'Pick Bible language',
            html: true,
            content: container.html(),
            placement: 'bottom'
        };


        $('#ver').popover(options);

        setTimeout(function () {
            var cssOptions = {
                "border-left-width": "0px",
                "position": "relative",
                "float": "none",
                "max-width":"70%"
            };
            $(".bw-widget-input").css(cssOptions);
        }, 500);

        $("#ver").on('hidden.bs.popover', function (e) {
            $(".popover.fade.bottom:eq(0)").remove();
        });

        $('#ver').on('shown.bs.popover', function (e) {
            // do something…
            //generate kendo grid
            //$("#book").popover('hide');

            var popover = $('.popover.fade.bottom.in');
            $("#search").kendoComboBox({
                placeholder: "Search Language...",
                dataTextField: "language_family_name",
                dataValueField: "language_family_iso",
                filter: "contains",
                template:"#= language_family_name # - #= language_family_english #",
                autoBind: false,
                minLength: 3,
                filtering: onLanguageFiltering,
                select: onLanguageSelect,
                dataSource: {
                    data: languages
                }
            });

            var language = getCurrentCulture().threeLetter;
            
            var grid = $("#table").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: kendo.format("{0}bible/VersionsAbs?language={1}", getBaseUrl(), language)
                        }
                    },
                    schema: {
                        data: "response.versions"
                    },
                    aggregate: [
                        { field: "id", aggregate: "count" }
                    ],
                    sort: {
                        field: "name",
                        dir: "asc"
                    }
                },
                groupable: false,
                dataBound: function () {
                },
                height: 300,
                selectable: "single",
                scrollable: true,
                serverFiltering: true,
                dataBound: function () {
                    var rowCount = grid.table.find("tbody > tr:visible").length;
                    document.getElementById('countVer').innerHTML = rowCount;
                },
                change: onVersionChange,
                columns: [{
                    field: "id",
                    title: "Version",
                    template: "#= id # - #= name #",
                    footerTemplate: "Items: <span id='countVer'> #:kendo.toString(count,'id')# </span>"
                }]
            }).data("kendoGrid");

            function onLanguageFiltering(e) {
                e.preventDefault();
                var val = e.filter.value;
                var filter = {
                    logic: "or",
                    filters: [
                        { field: "language_family_iso", operator: "contains", value: val },
                        { field: "language_family_code", operator: "contains", value: val },
                        { field: "language_family_name", operator: "contains", value: val },
                        { field: "language_family_english", operator: "contains", value: val },
                    ]
                };
                this.dataSource.filter(filter);
            }

            function onLanguageSelect(e) {
                if (e.item) {
                    var dataItem = this.dataItem(e.item.index());
                    console.log('language selected', dataItem.language_family_iso);

                    var read = {
                        dataType: "json",
                        url: function (m) {
                            return kendo.format("{0}bible/versionsAbs?language={1}", getBaseUrl(), dataItem.language_family_iso)
                        }
                    }
                    var grid = $("#table").data("kendoGrid");
                    grid.dataSource.transport.options.read = read;
                    grid.dataSource.read();
                    //grid.dataSource.filter(filter);
                }
            }

            //var width = popover.css('width');
            //$(this).css('width', width);

            popover.offset({ top: popover.offset().top, left: $(this).offset().left });
            popover.find(".arrow").css("left", (this.clientWidth / 2));

            //$("#search").on("keyup", function () {
            //    var g = $(this).val().replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (s) {
            //        return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);
            //    }).toLowerCase();

            //    var filter = {
            //        logic: "or",
            //        filters: [
            //            { field: "language_family_code", operator: "contains", value: g },
            //            { field: "language_family_name", operator: "contains", value: g },
            //            { field: "language_family_english", operator: "contains", value: g },
            //        ]
            //    };

            //    grid.dataSource.filter(filter);

            //    $(".row").each(function () {
            //        //s is the value within tr
            //        var s = $(this).text().toLowerCase();
            //        var rowCount = grid.table.find("tbody > tr:visible").length;
            //        document.getElementById('countLang').innerHTML = rowCount;
            //    });
            //});

          
        });
    }
        var fillLanguages = function () {
            return $.ajax({
                url: getBaseUrl() + "bible/languages",
                type: "GET",
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                headers: {
                    'Authorization': kendo.format('{0}/oauth/access_token', getBaseUrl()),
                    'Content-Type': 'application/json'
                },
                crossDomain: true,
                xhrFields: {
                    withCredentials: false
                },
                success: function (result) {
                    languages = result;
                },
                error: function (xhr, status, error) {
                    openDialog("Error", xhr.responseText || generalError);
                },
                complete: function (r) {
                    $('.search-bar').busyIndicator(false);
                }
            });
        }

        var fillVersions = function (language) {
            return $.ajax({
                url: kendo.format("{0}bible/VersionsAbs?language={1}", getBaseUrl(), language),
                datatype: "json",
                type: "GET",
                success: function (result) {
                    
                },
                error: function (xhr, status, error) {
                    openDialog("Error", generalError);
                },
                complete: function (r) {
                    $('.search-bar').busyIndicator(false);
                }
            });
        };

        var fillBooks = function (version) {
            return $.ajax({
                url: kendo.format("{0}bible/book?version={1}", getBaseUrl(), version),
                datatype: "json",
                type: "GET",
                async: false,
                success: function (result) {

                },
                error: function (xhr, status, error) {
                    openDialog("Error", generalError);
                },
                complete: function (r) {
                    $('.search-bar').busyIndicator(false);
                }
            }).responseJSON;
        }
        function getOffset(el) {
            el = el.getBoundingClientRect();
            return {
                left: el.left + window.scrollX,
                top: el.top + window.scrollY
            }
        }
    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        $('#chapter').popover('hide');
        $('#chapter').remove();

        $('#book').popover('hide');
        $('#book').remove();

        var grid = $("#table").data("kendoGrid");
        var selectedLanguage = grid.dataItem(grid.select());
        var language_family_code = selectedLanguage.language_family_code;
        var prevElem = $('#lang');
        var elem = $('<button id="version" type="button" class="btn btn-lg btn-danger">Version</button>');

        if ($('#version').length === 0)
            prevElem.after(elem);
        else
            elem = $('#version');

        var langpopover = $('.popover.fade.bottom.in').length === 2 ? $('.popover.fade.bottom.in:eq(0)') : $('.popover.fade.bottom.in');
        var offset = langpopover.offset();
        var width = langpopover.width();

        //container
        var container = $("<div>");
        var details = $([
            '<div class="row">',
            '<div class="col-lg-12">',
            '<input type="search" id="search-version" value="" class="form-control" placeholder="Search your prefered version">',
            '</div>',
            '</div>',
            '<div class="row">',
            '<div class="col-lg-12">',
            '<div class="table" id="table-version">',
            '</div>',
            '<hr>',
            '</div>',
            '</div>'].join(""));

        container.append(details);

        $(elem).popover({
            container: 'body',
            title: 'Pick your favorite version',
            html: true,
            content: container.html(),
            placement: 'bottom'
        });

        $(elem).on('shown.bs.popover', function (e) {
            // do something…
            //generate kendo grid
            var grid = $("#table-version").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            dataType: "json",
                            url: function (m) {
                                return kendo.format("{0}bible/Volumes?language_family_code={1}", getBaseUrl(), language_family_code)
                            },
                        }
                    },
                    aggregate: [
                        { field: "version_code", aggregate: "count" }
                    ],
                    sort: {
                        field: "version_code",
                        dir: "asc"
                    },
                    dataBound: function (d) {

                    },
                    schema: {
                        model: {
                            fields: {
                                dam_id: { type: "string" },
                                version_code: { type: "string" },
                                version_name: { type: "string" },
                                version_english: { type: "string" },
                                collection_code: { type: "string" },
                                collection_name: { type: "string" },
                                audio_zip_path: { type: "string" }
                            }
                        }
                    }
                },
                height: 300,
                selectable: "single",
                scrollable: true,
                change: onVersionChange,
                columns: [{
                    field: "version_code",
                    title: "Version",
                    template: "#= version_code # #= (version_name !== '') ? (' - ' + version_name) : ''  #",
                    footerTemplate: "Items: <span id='countVer'> #:kendo.toString(count,'version_code')# </span>"
                }]
            }).data("kendoGrid");

            $("#search-version").on("keyup", function () {
                var g = $(this).val().replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (s) {
                    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);
                }).toLowerCase();

                var filter = {
                    logic: "or",
                    filters: [
                        { field: "version_code", operator: "contains", value: g },
                        { field: "version_name", operator: "contains", value: g },
                        { field: "english_name", operator: "contains", value: g },
                    ]
                };

                grid.dataSource.filter(filter);

                $(".row").each(function () {
                    //s is the value within tr
                    var s = $(this).text().toLowerCase();
                    var rowCount = grid.table.find("tbody > tr:visible").length;
                    document.getElementById('countVer').innerHTML = rowCount;
                });
            });

            var width = $('.popover.fade.bottom.in:eq(1)').css('width');
            $(this).css('width', width);
            var data = grid.dataSource.data();
            $('#countVer').text(data.length);
        });

        $(elem).popover('show');

        $('.popover.fade.bottom.in:eq(1)').offset({
            "top": offset.top, "left": (offset.left + width + 10)
        });
    }
    function onBookChange(arg) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });
        var grid = $("#table-book").data("kendoGrid");
        var selectedBook = grid.dataItem(grid.select());
        var chapters = selectedBook.number_of_chapters;
        var dam_id = selectedBook.dam_id;
        var book_id = selectedBook.book_id;
        var prevElem = $('#book');
        var elem = $('<button id="chapter" type="button" class="btn btn-lg btn-danger">Chapter</button>');
        var propover = $('.popover.fade.bottom.in');

        if ($('#chapter').length === 0)
            prevElem.after(elem);
        else
            elem = $('#chapter');

        var elemIndex = (propover.length > 0 && propover.length <= 3 ? propover.length - 1 : 2).toString();
        var langpopover = $('.popover.fade.bottom.in:eq(' + elemIndex + ')');
        var offset = langpopover.offset();
        var width = langpopover.width();
        var height = langpopover.height();

        //container
        var container = $('<div id="booksContainer"></div>');

        var exist = $("#fieldlist-books").length > 0;
        var details = $("#fieldlist-books").length === 0 ? $("<ul id='fieldlist-books' style='font-size:25px;'></ul>") : $("#fieldlist-books");
        $("#fieldlist-books li").remove();
        $("#fieldlist-books li").empty();

        for (var i = 0; i < parseInt(chapters); i++) {
            var chapter_id = i + 1;
            var mySelection = {
                'dam_id': dam_id,
                'book_id': book_id,
                'chapter_id': chapter_id
            };

            var json = JSON.stringify(mySelection);
            var li = "<li><a class='chapters' href='#' onclick='rememberMySelection(" + json + ")'>" + chapter_id + "</a></li>";
            $(li).appendTo(details);
        }

        if (!exist) {
            container.append(details);
            $(elem).popover({
                container: 'body',
                title: 'Select a chapter',
                html: true,
                content: container[0].outerHTML,
                placement: 'bottom'
            });

            $(elem).popover('show');
            elem.css('width', (width - 10));
        }

        if (chapters <= 40)
            $("#booksContainer").removeClass("fieldlist-content");
        else
            $("#booksContainer").addClass("fieldlist-content");

        $("#fieldlist-books li").css('width', chapters >= 100 ? '50px' : '37px');

        $(elem).on('shown.bs.popover', function (e) {
            var width = $('.popover.fade.bottom.in:eq(2)').css('width');
            $(this).css('width', width);
            $('#chapter').css('width', (width));
        });

        $('.popover.fade.bottom.in:eq(3)').css('width', width);
        $('.popover.fade.bottom.in:eq(3)').css('height', height);
        $('.popover.fade.bottom.in:eq(3)').offset({
            "top": offset.top, "left": (offset.left + width + 10)
        });
    }
        function onVersionChange(arg) {
            var grid = $("#table").data("kendoGrid");
            var selectedVersion = grid.dataItem(grid.select());

            $.when(fillBooks(selectedVersion.id)).done(function (books) {
                var ver = $("#ver"), book = $("#book");
                ver.text(selectedVersion.abbreviation);
                ver.val(selectedVersion.id);
                book.show();
                var prevPopoverBody = $('.popover.fade.bottom.in:eq(0)');
                var offset = prevPopoverBody.offset();
                var width = prevPopoverBody.width();
                var height = prevPopoverBody.height();
                ver.popover('hide');
                
                //container
                var container = $('<div id="booksContainer"></div>');
                var chaptersContainer = $('<div id="chaptersContainer"></div>');

                var exist = $("#fieldlist-books").length > 0;
                var details = $("#fieldlist-books").length === 0 ? $("<ul id='fieldlist-books'></ul>") : $("#fieldlist-books ");
                $("#fieldlist-books li").remove();
                $("#fieldlist-books li").empty();
                var defaultValue = books.response.books[0];

                if (books && books.response.books) {
                    var _books = books.response.books;
                    for (var i = 0; i < _books.length; i++) {
                        var current_book = _books[i];
                        var json = JSON.stringify(current_book);
                        var li = "<li><a id='" + current_book.id + "' class='chapters' href='#' data='" + json + "' >" + current_book.name + "</a></li>";
                        $(li).appendTo(details);
                    }
                }

                if (!exist) {
                    container.append(details);
                    $(book).popover({
                        container: 'body',
                        title: kendo.format('{0} Selected by default', defaultValue.name),
                        html: true,
                        content: container[0].outerHTML,
                        placement: 'bottom'
                    });

                    $(book).on('hidden.bs.popover', function (e) {
                        $(".popover.fade.bottom:eq(0)").remove();
                    });

                    $(book).on('shown.bs.popover', function (e) {
                        var popoverContent = $(".popover-content");
                        chaptersContainer.appendTo(popoverContent);
                        var options = { "height": height + 10, "width": width + 200 };
                        $('.popover.fade.bottom.in:eq(0)').css(options);
                        $("f-left").val(kendo.format("{0} books", books.response.books.length));

                        //fill default value chapters when appear.
                        var firstElement = $("#fieldlist-books:eq(0) li:eq(0)");
                        firstElement.addClass("active");
                        var footerDiv = $(kendo.format('<div class="popover-footer"><div class="f-left">{0} books</div><div class="f-right"></div></>', books.response.books.length));
                        footerDiv.appendTo(popoverContent);

                        buildChaptersList(firstElement, chaptersContainer);
                        $('#fieldlist-books li').on('click', function (e) {
                            $(this.parentElement.children).removeClass("active");
                            $(this).addClass("active");
                            //build chapters list
                            $(".popover-title").text(kendo.format("{0} Selected", $(this)[0].firstElementChild.text));
                            buildChaptersList($(this), chaptersContainer);
                        });
                    });

                    $(book).popover('show');
                    //book.css('width', (width - 10));
                }
            });
        

        //var prevElem = $('#version');
        //var elem = $('<button id="book" type="button" class="btn btn-lg btn-danger">Book</button>');

        //if ($('#book').length === 0)
        //    prevElem.after(elem);
        //else
        //    elem = $('#book');

        //var elemIndex = (propover.length > 0 && propover.length <= 2 ? propover.length - 1 : 1).toString();
        //var langpopover = $('.popover.fade.bottom.in:eq(' + elemIndex + ')');
        //var offset = langpopover.offset();
        //var width = langpopover.width();

        ////container
        //var container = $("<div>");
        //var details = $([
        //    '<div class="row">',
        //    '<div class="col-lg-12">',
        //    '<input type="search" id="search-book" value="" class="form-control" placeholder="Search book">',
        //    '</div>',
        //    '</div>',
        //    '<div class="row">',
        //    '<div class="col-lg-12">',
        //    '<div class="table" id="table-book">',
        //    '</div>',
        //    '<hr>',
        //    '</div>',
        //    '</div>'].join(""));

        //container.append(details);

        //$(elem).popover({
        //    container: 'body',
        //    title: 'Select a book',
        //    html: true,
        //    content: container.html(),
        //    placement: 'bottom'
        //});

        //$(elem).on('shown.bs.popover', function (e) {
        //    // do something…
        //    //generate kendo grid
        //    var grid = $("#table-book").kendoGrid({
        //        dataSource: {
        //            type: "json",
        //            transport: {
        //                read: {
        //                    dataType: "json",
        //                    url: function (m) {
        //                        return kendo.format("{0}bible/books?dam_id={1}", getBaseUrl(), dam_id)
        //                    },
        //                }
        //            },
        //            aggregate: [
        //                { field: "book_id", aggregate: "count" }
        //            ],
        //            sort: {
        //                field: "book_order",
        //                dir: "asc"
        //            },
        //            schema: {
        //                model: {
        //                    fields: {
        //                        dam_id: { type: "string" },
        //                        book_id: { type: "string" },
        //                        book_name: { type: "string" },
        //                        book_order: { type: "number" },
        //                        number_of_chapters: { type: "number" },
        //                        chapters: { type: "object" },
        //                    }
        //                }
        //            }
        //        },
        //        height: 300,
        //        change: onBookChange,
        //        selectable: "single",
        //        sortable: true,
        //        scrollable: true,
        //        // change: onChange,
        //        columns: [{
        //            field: "book_id",
        //            title: "Book",
        //            template: '#= book_name # - #= number_of_chapters #',
        //            footerTemplate: "Items: <span id='countBoo'>#: kendo.toString(count, 'book_id')# </span>"
        //        }]
        //    }).data("kendoGrid");

        //    $("#search-book").on("keyup", function () {
        //        var g = $(this).val().replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (s) {
        //            return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);
        //        }).toLowerCase();

        //        var filter = {
        //            logic: "or",
        //            filters: [
        //                { field: "book_id", operator: "contains", value: g },
        //                { field: "book_name", operator: "contains", value: g },
        //                { field: "dam_id", operator: "contains", value: g },
        //            ]
        //        };

        //        grid.dataSource.filter(filter);

        //        $(".row").each(function () {
        //            //s is the value within tr
        //            var s = $(this).text().toLowerCase();
        //            var rowCount = grid.table.find("tbody > tr:visible").length;
        //            document.getElementById('countBoo').innerHTML = rowCount;
        //        });
        //    });

        //    var width = $('.popover.fade.bottom.in:eq(2)').css('width');
        //    $(this).css('width', width);
        //});

        //$(elem).popover('show');
        //$('.popover.fade.bottom.in:eq(2)').offset({
        //    "top": offset.top, "left": (offset.left + width + 10)
        //});
        }

        function buildChaptersList(elem, container) {
            container.empty();
            var ul = $('<ul id="fieldlist-chapters"></ul>');
            var data = $(elem.find("a")).attr("data");
            var json = JSON.parse(data);
            var chapters = json.chapters

            for (var i = 0; i < chapters.length; i++) {
                var chap = chapters[i];
                var version = chap.id.split(':')[0], book = json.abbr;
                var li = kendo.format('<li><a href="Bible/Index?version={0}&book={1}&chapter={2}">{3}</a></li>', version, book, chap.chapter, chap.chapter );
                $(li).appendTo(ul);
            }

            ul.appendTo(container);
            $(".f-right").text(kendo.format("{0} chapters", chapters.length ));
        }


    function getSelectedItem(tableName) {
        return $("#" + tableName).data("kendoGrid").dataItem($("#" + tableName).data("kendoGrid").select());
    }
    </script>
        <style>
            #custom-search-input {
                padding: 3px;
                border: solid 1px #E4E4E4;
                border-radius: 6px;
                background-color: #fff;
            }

                #custom-search-input input {
                    border: 0;
                    box-shadow: none;
                }

                #custom-search-input button {
                    margin: 2px 0 0 0;
                    background: none;
                    box-shadow: none;
                    border: 0;
                    color: #666666;
                    padding: 0 8px 0 10px;
                    border-left: solid 1px #ccc;
                }

                    #custom-search-input button:hover {
                        border: 0;
                        box-shadow: none;
                        border-left: solid 1px #ccc;
                    }

                #custom-search-input .glyphicon-search {
                    font-size: 23px;
                }

            #fieldlist {
                height: auto;
                -webkit-columns: 5;
                -moz-columns: 5;
                columns: 5;
                -moz-column-fill: balance;
                column-fill: balance;
                list-style: none;
            }
            .fieldlist-content {
                max-height: 365px;
                overflow-y: scroll;
                margin-bottom: 5px;
            }
            #fieldlist-books {
                font-size:20px;
                height: auto;
                overflow: hidden;
                display: table;
                padding: 0;
                list-style: none;
                background-color:transparent;
                display:inline;
            }
            #fieldlist-books .active {background-color: #616D74;cursor: default;}
            #fieldlist-books .active a { color: white;}
            #fieldlist-books li {padding:4px;margin-left:0;margin-right:auto;cursor:pointer;}
            #fieldlist-chapters {
                list-style: none;
                margin-left: 0;
                padding-left: 5px;
                display: inline;
            }

            .demo-hint {line-height: 22px;color: #aaa;font-style: italic;font-size: .9em;padding-top: 1em;}

            .search-bar {
                padding: 10px;
                background: gainsboro;
                border: 1px solid #d3d4d0;
            }

            .row-padding {
                margin-top: 25px;
                margin-bottom: 25px;
            }

            .popover-content {
                /*margin: 5px;*/
            }
            .footer a{display:none;}
            .bw-widget-input-new-value {
                border-left-width: 0px;
                position: relative;
                float: none;
            }
            #booksContainer{max-height:360px;overflow:auto;float:left;width:80%}
            #chaptersContainer {
                max-height: 360px;
                overflow: auto;
                float: right;
            }

            .popover-content .popover-footer {
                position: absolute;
                right: 0;
                bottom: 0;
                left: 0;
                padding: 1rem;
                background-color: #efefef;
                text-align: center;
                display:flex;
            }

            .popover-content .popover-footer div{width:50%;}
        </style>
    }
